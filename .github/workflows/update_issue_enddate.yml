name: Update Issue End Date

on:
  push:
    branches:
      - main

permissions:
  issues: write
  contents: write
  projectV2: write

jobs:
  update-roadmap:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Extract issue number from commit message
      id: extract_issue_number
      run: |
        echo "ISSUE_NUMBER=$(git log -1 --pretty=%B | grep -o '#[0-9]\+' | tr -d '#')" >> $GITHUB_ENV

    - name: Get current date
      id: date
      run: echo "current_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

    - name: Update issue end date in project
      if: env.ISSUE_NUMBER != ''
      uses: actions/github-script@v3
      with:
        script: |
          const issue_number = process.env.ISSUE_NUMBER;
          const current_date = process.env.current_date;
          const owner = context.repo.owner;
          const repo = context.repo.repo;

          const query = `
            query($owner: String!, $repo: String!, $issue_number: Int!) {
              repository(owner: $owner, name: $repo) {
                issue(number: $issue_number) {
                  id
                  projectItems(first: 1) {
                    nodes {
                      id
                    }
                  }
                }
              }
            }
          `;

          const variables = {
            owner: owner,
            repo: repo,
            issue_number: parseInt(issue_number)
          };

          const result = await github.graphql(query, variables);
          const projectItemId = result.repository.issue.projectItems.nodes[0].id;

          const mutation = `
            mutation($projectItemId: ID!, $current_date: DateTime!) {
              updateProjectV2ItemFieldValue(input: {
                projectId: "PVT_kwHOBIiZWc4Axi5Z",
                itemId: $projectItemId,
                fieldId: "PVTF_lAHOBIiZWc4Axi5Zzgno-o8",
                value: {
                  date: $current_date
                }
              }) {
                projectV2Item {
                  id
                }
              }
            }
          `;

          const mutationVariables = {
            projectItemId: projectItemId,
            current_date: current_date
          };

          await github.graphql(mutation, mutationVariables);
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}