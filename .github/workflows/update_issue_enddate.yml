name: Update Issue End Date

on:
  push:
    branches:
      - main

permissions:
  issues: write
  contents: write

jobs:
  update-roadmap:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Extract issue number from commit message
      id: extract_issue_number
      run: |
        echo "ISSUE_NUMBER=$(git log -1 --pretty=%B | grep -o '#[0-9]\+' | tr -d '#')" >> $GITHUB_ENV

    - name: Get current date
      id: date
      run: echo "current_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

    - name: Update issue end date in project
      if: env.ISSUE_NUMBER != ''
      uses: actions/github-script@v3
      with:
        script: |
          const issue_number = process.env.ISSUE_NUMBER;
          const current_date = process.env.current_date;
          const owner = context.repo.owner;
          const repo = context.repo.repo;

          const query = `
            query($owner: String!, $repo: String!, $issue_number: Int!) {
              repository(owner: $owner, name: $repo) {
                issue(number: $issue_number) {
                  id
                  projectItems(first: 10) {
                    nodes {
                      id
                      content {
                        ... on Issue {
                          title
                        }
                        ... on PullRequest {
                          title
                        }
                      }
                      fieldValues(first: 10) {
                        nodes {
                          field {
                            name
                          }
                          value
                        }
                      }
                    }
                  }
                }
              }
            }
          `;

          const variables = {
            owner: owner,
            repo: repo,
            issue_number: parseInt(issue_number)
          };

          const result = await github.graphql(query, variables);
          const projectItems = result.repository.issue.projectItems.nodes;
          let projectItemId = null;
          let endDateFieldId = null;

          for (const item of projectItems) {
            if (item.content && item.content.title.includes(`#${issue_number}`)) {
              projectItemId = item.id;
              for (const fieldValue of item.fieldValues.nodes) {
                if (fieldValue.field.name === "End date") {
                  endDateFieldId = fieldValue.field.id;
                  break;
                }
              }
              break;
            }
          }

          if (projectItemId) {
            if (endDateFieldId) {
              const mutation = `
                mutation($projectItemId: ID!, $endDateFieldId: ID!, $current_date: DateTime!) {
                  updateProjectV2ItemFieldValue(input: {
                    projectId: "PVT_kwHOBIiZWc4Axi5Z",
                    itemId: $projectItemId,
                    fieldId: $endDateFieldId,
                    value: {
                      date: $current_date
                    }
                  }) {
                    projectV2Item {
                      id
                    }
                  }
                }
              `;

              const mutationVariables = {
                projectItemId: projectItemId,
                endDateFieldId: endDateFieldId,
                current_date: current_date
              };

              await github.graphql(mutation, mutationVariables);
            } else {
              console.log(`No 'End date' field found for issue #${issue_number}`);
            }
          } else {
            console.log(`No project items found for issue #${issue_number}`);
          }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}